---
- name: system-defaults | Global Administrator Settings
  become: true
  osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    state: "{{ item.state }}"
  with_items:
# Show the machine information on the login screen when the user clicks the clock
#    - { domain: com.apple.loginwindow, key: AdminHostInfo, type: string, value: HostName, state: present }
# Turn off the power button automatically putting the machine to sleep, this will instead show a dialog
    - { domain: com.apple.loginwindow, key: PowerButtonSleepsSystem, type: bool, value: "false", state: present }
# Add a message to the login window
#    - { domain: com.apple.loginwindow, key: LoginwindowText, type: string, value: "Property of Brennan A. Fee.", state: present }

- name: system-defaults | Global User Settings
  osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    state: "{{ item.state }}"
  with_items:
# Always show scrollbars
    - { domain: NSGlobalDomain, key: AppleShowScrollBars, type: string, value: Always, state: present }
# Enable full keyboard access for all controls (enable Tab in modal dialogs)
    - { domain: NSGlobalDomain, key: AppleKeyboardUIMode, type: int, value: 3, state: present }
# Software update check frequency (in days)
    - { domain: com.apple.SoftwareUpdate, key: ScheduleFrequency, type: int, value: 1, state: present }
# Trackpad - Turn off tap to click
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: Clicking, type: int, value: 0, state: present }
    - { domain: NSGlobalDomain, key: com.apple.mouse.tapBehavior, type: int, value: 0, state: present }
# Mouse - Turn off acceleration
    - { domain: NSGlobalDomain, key: com.apple.mouse.scaling, type: float, value: -1, state: present }
# Trackpad - Turn on two finger right-click
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: TrackpadRightClick, type: bool, value: "true", state: present }
# Trackpad - Other Defaults
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: TrackpadThreeFingerTapGesture, type: int, value: 0, state: present }
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: TrackpadThreeFingerDrag, type: bool, value: "true", state: present }
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: TrackpadPinch, type: int, value: 1, state: present }
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: TrackpadTwoFingerDoubleTapGesture, type: int, value: 1, state: present }
# Turn off automatic spelling correction
    - { domain: NSGlobalDomain, key: NSAutomaticSpellingCorrectionEnabled, type: bool, value: "false", state: present }
# Turn off Press And Hold in favor of key repeat
    - { domain: NSGlobalDomain, key: ApplePressAndHoldEnabled, type: bool, value: "false", state: present }
# Set a very fast key repeat
    - { domain: NSGlobalDomain, key: KeyRepeat, type: int, value: 6, state: present }
# Set the default type of screen captures
    - { domain: com.apple.screencapture, key: type, type: string, value: "png", state: present }
# Turn off the shadow when capturing screen images
    - { domain: com.apple.screencapture, key: disable-shadow, type: bool, value: "true", state: present }
# Don't write .DS_Store files on network volumes
    - { domain: com.apple.desktopservices, key: DSDontWriteNetworkStores, type: string, value: "true", state: present }
# Enable the WebKit Developer Tools in the Mac App Store
    - { domain: com.apple.appstore, key: WebKitDeveloperExtras, type: bool, value: "true", state: present }
# Show battery percentage
    - { domain: com.apple.menuextra.battery, key: ShowPercent, type: string, value: "true", state: present }
# Expand save panel by default
    - { domain: NSGlobalDomain, key: NSNavPanelExpandedStateForSaveMode, type: bool, value: "true", state: present }
    - { domain: NSGlobalDomain, key: NSNavPanelExpandedStateForSaveMode2, type: bool, value: "true", state: present }
# Expanded printpanel by default
    - { domain: NSGlobalDomain, key: PMPrintingExpandedStateForPrint, type: bool, value: "true", state: present }
# Save to disk (not to iCloud) by default
    - { domain: NSGlobalDomain, key: NSDocumentSaveNewDocumentsToCloud, type: bool, value: "false", state: present }
# Disable the Time Machine new disk requests dialog
    - { domain: com.apple.TimeMachine, key: DoNotOfferNewDisksForBackup, type: bool, value: "true", state: present }
# Disable Resume system-wide
    - { domain: com.apple.systempreferences, key: NSQuitAlwaysKeepsWindows, type: bool, value: "false", state: present }
# Disable smart quotes and dashes (they're annoying when typing code)
    - { domain: NSGlobalDomain, key: NSAutomaticQuoteSubstitutionEnabled, type: bool, value: "false", state: present }
    - { domain: NSGlobalDomain, key: NSAutomaticDashSubstitutionEnabled, type: bool, value: "false", state: present }
# Disable “natural” (Lion-style) scrolling
    - { domain: NSGlobalDomain, key: com.apple.swipescrolldirection, type: bool, value: "false", state: present }
# Increase sound quality for Bluetooth headphones/headsets
    - { domain: com.apple.BluetoothAudioAgent, key: "Apple Bitpool Min (editable)", type: int, value: 40, state: present }
# Increase window resize speed
    - { domain: NSGlobalDomain, key: NSWindowResizeTime, type: float, value: 0.003, state: present }
# Set the default type of screen captures
    - { domain: com.apple.screencapture, key: location, type: string, value: "{{ ansible_user_dir }}/Desktop/", state: present }
# Disable the “reopen windows when logging back in” option
#  - { domain: com.apple.loginwindow, key: TALLogoutSavesState, type: bool, value: "false", state: present }
#  - { domain: com.apple.loginwindow, key: LoginwindowLaunchesRelaunchApps, type: bool, value: "false", state: present }
#--------------------------> Screensaver
# Ask for password after sleep or screen saver
    - { domain: com.apple.screensaver, key: askForPassword, type: int, value: 1, state: present }
# Delay between screensaver turning on and password being required to unlock (in seconds, 300 = 5 minutes)
    - { domain: com.apple.screensaver, key: askForPasswordDelay, type: float, value: 300.0, state: present }
#--------------------------> Terminal.app
# Only use UTF-8 in Terminal.app
#    - { domain: com.apple.terminal, key: StringEncodings, type: array, value: "[4]", state: present }
#--------------------------> TextEdit
# Use plain text mode for new TextEdit documents
    - { domain: com.apple.TextEdit, key: RichText, type: int, value: 0, state: present }
# Open and save files as UTF-8 in TextEdit
    - { domain: com.apple.TextEdit, key: PlainTextEncoding, type: int, value: 4, state: present }
    - { domain: com.apple.TextEdit, key: PlainTextEncodingForWrite, type: int, value: 4, state: present }
#--------------------------> Lanchpad & Mission Control
# Remove animations for showing/hiding Launchpad
    - { domain: com.apple.dock, key: springboard-show-duration, type: float, value: 0, state: present }
    - { domain: com.apple.dock, key: springboard-hide-duration, type: float, value: 0, state: present }
    - { domain: com.apple.dock, key: springboard-page-duration, type: float, value: 0, state: present }
# Speed up Mission Control animations
    - { domain: com.apple.doc, key: expose-animation-duration, type: float, value: 0.1, state: present }
#--------------------------> Dock
# Remove the animation when hidng/showing the Dock
    - { domain: com.apple.dock, key: autohide-time-modifier, type: float, value: 0, state: present }
# Remove the auto-hiding dock delay
    - { domain: com.apple.dock, key: autohide-delay, type: int, value: 0, state: present }
# Auto-hide
    - { domain: com.apple.dock, key: autohide, type: bool, value: "true", state: present }
# Set dock icon size
    - { domain: com.apple.dock, key: tilesize, type: float, value: 48, state: present }
# Set minimize effect
    - { domain: com.apple.dock, key: mineffect, type: string, value: scale, state: present }
# Minimize windows into their application's icon
    - { domain: com.apple.dock, key: minimize-to-application, type: bool, value: "true", state: present }
# Show indicator lights for open applications in the Dock
    - { domain: com.apple.dock, key: show-process-indicators, type: bool, value: "true", state: present }
# Don't automatically rearrange Spaces base on most recent used
    - { domain: com.apple.dock, key: mru-spaces, type: bool, value: "false", state: present }
# Hot Corners - Bottom Left -> Mission Control
    - { domain: com.apple.dock, key: wvous-bl-corner, type: int, value: 2, state: present }
    - { domain: com.apple.dock, key: wvous-bl-modifier, type: int, value: 0, state: present }
# Hot Corners - Top Left -> Start Screen Saver
    - { domain: com.apple.dock, key: wvous-tl-corner, type: int, value: 5, state: present }
    - { domain: com.apple.dock, key: wvous-tl-modifier, type: int, value: 0, state: present }
# How hidden apps as translucent
    - { domain: com.apple.dock, key: showhidden, type: bool, value: "true", state: present }
#--------------------------> Finder
# Set HOME as the default location for new Finder windows
    - { domain: com.apple.finder, key: NewWindowTarget, type: string, value: "PfHm", state: present }
# Display full POSIX path as Finder window title
    - { domain: com.apple.finder, key: _FXShowPosixPathInTitle, type: bool, value: "true", state: present }
# When performing a search, search the current folder by default
    - { domain: com.apple.finder, key: FXDefaultSearchScope, type: string, value: "SCcf", state: present }
# Disable the warning when changing file extension
    - { domain: com.apple.finder, key: FXEnableExtensionChangeWarning, type: bool, value: "false", state: present }
# Show File Extensions
    - { domain: NSGlobalDomain, key: AppleShowAllExtensions, type: bool, value: "true", state: present }
# Show All Files
    - { domain: com.apple.finder, key: AppleShowAllFiles, type: bool, value: "false", state: present }
# Show Path Bar
    - { domain: com.apple.finder, key: ShowPathbar, type: bool, value: "true", state: present }
# Set Finder Path Bar to be relative to home directory
    - { domain: com.apple.finder, key: PathBarRootAtHome, type: bool, value: "true", state: present }
# Show status bar
    - { domain: com.apple.finder, key: ShowStatusBar, type: bool, value: "true", state: present }
# Text selection in Quick Look
    - { domain: com.apple.finder, key: QLEnableTextSelection, type: bool, value: "true", state: present }
# Warning before emptying the Trash
    - { domain: com.apple.finder, key: WarnOnEmptyTrash, type: bool, value: "false", state: present }
# Empty Trash Securely or not
    - { domain: com.apple.finder, key: EmptyTrashSecurely, type: bool, value: "true", state: present }
# Allow quitting via Cmd + Q
    - { domain: com.apple.finder, key: QuitMenuItem, type: bool, value: "true", state: present }
# Use list view in all Finder windows by default. Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
    - { domain: com.apple.finder, key: FXPreferredViewStyle, type: string, value: "Nlsv", state: present }
# Hide Desktop Items Completely
    - { domain: com.apple.finder, key: CreateDesktop, type: bool, value: "true", state: present }
#--------------------------> Safari
# Don't send search queries to Apple
    - { domain: com.apple.Safari, key: UniversalSearchEnabled, type: bool, value: "false", state: present }
    - { domain: com.apple.Safari, key: SuppressSearchSuggestions, type: bool, value: "true", state: present }
# Show the full URL in the address bar
    - { domain: com.apple.Safari, key: ShowFullURLInSmartSearchField, type: bool, value: "true", state: present }
# Prevent Safari from opening ‘safe' files automatically after downloading
    - { domain: com.apple.Safari, key: AutoOpenSafeDownloads, type: bool, value: "false", state: present }
# Press Tab to highlight each item on a web page
    - { domain: com.apple.Safari, key: WebKitTabToLinksPreferenceKey, type: bool, value: "true", state: present }
    - { domain: com.apple.Safari, key: com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks, type: bool, value: "true", state: present }
# Enable the Develop menu and the Web Inspector in Safari
    - { domain: com.apple.Safari, key: IncludeDevelopMenu, type: bool, value: "true", state: present }
    - { domain: com.apple.Safari, key: WebKitDeveloperExtrasEnabledPreferenceKey, type: bool, value: "true", state: present }
    - { domain: com.apple.Safari, key: com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled, type: bool, value: "true", state: present }
    - { domain: NSGlobalDomain, key: WebKitDeveloperExtras, type: bool, value: "true", state: present }
# Resume feature in Safari
    - { domain: com.apple.Safari, key: NSQuitAlwaysKeepsWindows, type: bool, value: "false", state: present }
# Home page
    - { domain: com.apple.Safari, key: HomePage, type: string, value: "https://www.google.com", state: present }
#--------------------------> Email
# Copy email addresses as 'foo@example.com' instead of 'Foo Bar <foo@example.com>' in Mail.app
    - { domain: com.apple.mail, key: AddressesIncludeNameOnPasteboard, type: bool, value: "false", state: present }
  notify:
    - killall Dock
    - killall Finder
    - killall SystemUIServer

- name: system-defaults | Check Dark Mode
  command: /usr/local/bin/dark-mode --mode
  register: dark_mode
  changed_when: False

- name: system-defaults | Turn On Dark Mode
  command: /usr/local/bin/dark-mode --mode Dark
  when: 'dark_mode.stdout|default("") != "Dark"'
  notify:
    - killall Dock
    - killall SystemUIServer
